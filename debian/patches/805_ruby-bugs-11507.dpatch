#! /bin/sh /usr/share/dpatch/dpatch-run
## 805_ruby-bugs-11507.dpatch by akira yamada <akira@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: [ruby-dev:31031]

@DPATCH@
diff -urNad ruby1.8-1.8.6.36~/ext/thread/thread.c ruby1.8-1.8.6.36/ext/thread/thread.c
--- ruby1.8-1.8.6.36~/ext/thread/thread.c	2007-06-07 21:40:01.000000000 +0900
+++ ruby1.8-1.8.6.36/ext/thread/thread.c	2007-07-23 16:16:11.000000000 +0900
@@ -12,7 +12,6 @@
 #include <ruby.h>
 #include <intern.h>
 #include <rubysig.h>
-#include <node.h>
 
 static VALUE rb_cMutex;
 static VALUE rb_cConditionVariable;
@@ -260,10 +259,10 @@
     return Qnil;
 }
 
-static void
+static VALUE
 wait_list(List *list)
 {
-    rb_ensure(wait_list_inner, (VALUE)list, wait_list_cleanup, (VALUE)list);
+    return rb_ensure(wait_list_inner, (VALUE)list, wait_list_cleanup, (VALUE)list);
 }
 
 static void
@@ -444,22 +443,6 @@
     return self;
 }
 
-static VALUE
-relock_mutex(Mutex *mutex)
-{
-    VALUE current = rb_thread_current();
-
-    switch (rb_thread_status(current)) {
-      case THREAD_RUNNABLE:
-      case THREAD_STOPPED:
-	lock_mutex(mutex);
-	break;
-      default:
-	break;
-    }
-    return Qundef;
-}
-
 /*
  * Document-method: unlock
  *
@@ -673,7 +656,7 @@
     if (RTEST(waking)) {
 	wake_thread(waking);
     }
-    rb_ensure(wait_list, (VALUE)&condvar->waiting, relock_mutex, (VALUE)mutex);
+    rb_ensure(wait_list, (VALUE)&condvar->waiting, lock_mutex, (VALUE)mutex);
 }
 
 static VALUE
